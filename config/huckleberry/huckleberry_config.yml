# Email config
# ---------------------------------------------------
subject: 'Huckleberry | Logfile report'

subject_log_not_found: 'Huckleberry | Unknown logfile'

from: 'huckleberry@example.com'

recipients: 'amcfadden@renewfinancial.com'


# Log types.
# ---------------------------------------------------
# Ex: type: {
#   keywords: [foo, bar],
#   parsing_regexp: [
#                   !ruby/regexp 'foo',
#                   !ruby/regexp 'foo',
#                   ]
# }
# ---------------------------------------------------

production: {
            keywords: [production],
            parsing_regexp: [
                !ruby/regexp '/Rendered.*(erb|html|builder|template)/',
                !ruby/regexp '/Completed (200|302|204)/',
                !ruby/regexp '/Redirected to/',
                !ruby/regexp '/Parameters: \{.*\}$/',
                !ruby/regexp '/Started (GET|POST|PUT|PATCH|DELETE)/',
                !ruby/regexp '/(SELECT).*(AS|FROM)/',
                !ruby/regexp '/(SET).*\=/',
                !ruby/regexp '/truncate/',
                !ruby/regexp '/BEGIN/',
                !ruby/regexp '/COMMIT/',
                !ruby/regexp '/INSERT INTO/',
                !ruby/regexp '/(GET).*(200|302)/',
                !ruby/regexp '/(updated_at).*(WHERE)/',
                !ruby/regexp '/Processing by.*Controller/',
                !ruby/regexp '/Filter chain halted as/',
                !ruby/regexp '/Sent data.*(pdf|docx|english|jpg|jpeg|xlsx|xls|csv|png)/i',
                !ruby/regexp '/(POST|PUT|GET|DELETE): http/',
                !ruby/regexp '/\{(:headers){1}.*(application\/",json).*\}/',
                !ruby/regexp '/Requested param.*\]/',
                !ruby/regexp '/LDAP.*\[.*\]/',
                !ruby/regexp '/LDAP.*connect/',
                !ruby/regexp '/sequel_reconnector/',
                !ruby/regexp '/AWS (S3|STS) (200|204)/',
                !ruby/regexp '/\[AIRBRAKE\] Success/i'
              ]
            }

new_relic_keywords: {
            keywords: [newrelic],
            parsing_regexp: [
                !ruby/regexp '/Starting the New Relic agent/',
                !ruby/regexp '/To prevent agent startup add a NEWRELIC_AGENT_ENABLED=false/',
                !ruby/regexp '/Reading configuration from config\/",newrelic.yml/',
                !ruby/regexp '/Environment: \w*$/',
                !ruby/regexp '/Application: \w*$/',
                !ruby/regexp '/No known dispatcher detected./',
                !ruby/regexp '/(Installing|Finished).*instrumentation$/',
                !ruby/regexp '/Reporting to: http/',
                !ruby/regexp '/Starting Agent shutdown/',
                !ruby/regexp '/Dispatcher: thin/',
                !ruby/regexp '/Doing deferred dependency-detection before Rack startup/'
              ]
            }

mailer_keywords: {
            keywords: [mailer],
            parsing_regexp: [
                !ruby/regexp '/\d{4}\-\d{2}\-\d{2} \d{2}\:\d{2}\:\d{2}/',
                !ruby/regexp '/Date: .*\+\d{4}/',
                !ruby/regexp '/(From:|To:) .*@/',
                !ruby/regexp '/Subject: .*/',
                !ruby/regexp '/Mime-Version:/',
                !ruby/regexp '/Content-Type:/',
                !ruby/regexp '/charset\=/',
                !ruby/regexp '/Message-ID: \<.*\>/',
                !ruby/regexp '/Content-Transfer-Encoding:/',
                !ruby/regexp '/View the application here/',
                !ruby/regexp '/.*==_mimepart_.*/',
                !ruby/regexp '/\(.*resend_email\)/'
              ]
            }

process_runner_keywords: {
            keywords: [process, runner],
            parsing_regexp: [
                !ruby/regexp '/Launched process/',
                !ruby/regexp '/Completing task.*no params needed/',
                !ruby/regexp '/\* complete!/'
              ]
            }

thin_keywords: {
            keywords: [thin],
            parsing_regexp: [
                !ruby/regexp '/Status: 200/',
                !ruby/regexp '/Api-(Token|Version):/',
                !ruby/regexp '/Content-Type:/i',
                !ruby/regexp '/transfer-encoding:/',
                !ruby/regexp '/connection:/',
                !ruby/regexp '/x-newrelic-app-data:/',
                !ruby/regexp '/DEBUG -- (request:|response:)/',
                !ruby/regexp '/INFO -- : post http/',
                !ruby/regexp '/date:.*\/'
              ]
            }
