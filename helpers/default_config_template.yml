# Email config
# ---------------------------------------------------
# emails can have multiple recipients seperated by commas

subject: 'Default subject'

subject_log_not_found: 'Subject Line when no keyword is matched'

from: 'huckleberry@example.com'

recipients: 'Enter Email'

message_body: "Huckleberry log parser"


# Log types.
# ---------------------------------------------------
# the variables (log_types, keywords, parsing_regexp) are set and need to remain the same throughout

  # keywords should be found in the logfile name
  # production.log-20159230 has production as a keyword

  # Parsing regexp should identify lines that you wish to exclude from results.
  # regexps should be entered as a string


# log_types:
#   example:                    # This name will be used to group the keywords with the regex
#     keywords:  [foo, bar],
#     parsing_regexp: [
          #  '/regex here/',
          #  '/\d*/',
          #  ]
# ---------------------------------------------------
# {log_types: {prod: {keywords: []}, {parsing_regexp: []}}}

log_types:
  production:
    keywords: [production]
    parsing_regexp: [
        '/INFO -- :\s*Redirected to/',
        '/INFO -- :\s*Rendered.*(erb|html|builder|template)/',
        '/INFO -- :\s*Completed (200|302|204)/',
        '/INFO -- :\s*Parameters: \{.*\}$/',
        '/INFO -- :\s*Started (GET|POST|PUT|PATCH|DELETE)/',
        '/\A(\):)$/',
        '/app/(views|decorators|lib|controllers)/.*(erb|rb):\d*:/',
        '/(\d+:\s*\<.*\>)$/',
        '/(\d+:{1})$/',
        '/INFO -- :\s*Processing by.*Controller/',
        '/INFO -- :\s*Filter chain halted as/',
        '/INFO -- :\s*Sent data.*(pdf|docx|english|jpg|jpeg|xlsx|xls|csv|png|\dms)/i',
        '/INFO -- :\s*(POST|PUT|GET|DELETE): http/',
        '/\{(:headers){1}.*(application\/json).*\}/',
        '/INFO -- :\s*Requested param.*\]/',
        '/INFO -- :\s*LDAP.*\[.*\]/',
        '/INFO -- :\s*Attempting LDAP connect/',
        '/\Alib\/sequel_reconnector/',
        '/AWS (S3|STS) (200|204)/',
        '/\[AIRBRAKE\] Success/i',
        '/(\s*\^\s*)$/'
      ]

  new_relic_keywords:
    keywords: [newrelic]
    parsing_regexp: [
        '/Starting the New Relic agent/',
        '/To prevent agent startup add a NEWRELIC_AGENT_ENABLED=false/',
        '/Reading configuration from config\/",newrelic.yml/',
        '/Environment: \w*$/',
        '/Application: \w*$/',
        '/No known dispatcher detected./',
        '/(Installing|Finished).*instrumentation$/',
        '/Reporting to: http/',
        '/Starting Agent shutdown/',
        '/Dispatcher: thin/',
        '/Doing deferred dependency-detection before Rack startup/'
      ]

  mailer_keywords:
    keywords: [mailer]
    parsing_regexp: [
        '/\d{4}\-\d{2}\-\d{2} \d{2}\:\d{2}\:\d{2}/',
        '/Date: .*\+\d{4}/',
        '/(From:|To:) .*@/',
        '/Subject: .*/',
        '/Mime-Version:/',
        '/Content-Type:/',
        '/charset\=/',
        '/Message-ID: \<.*\>/',
        '/Content-Transfer-Encoding:/',
        '/View the application here/',
        '/.*==_mimepart_.*/',
        '/\(.*resend_email\)/'
      ]

  process_runner_keywords:
    keywords: [process, runner]
    parsing_regexp: [
        '/Launched process/',
        '/Completing task.*no params needed/',
        '/\* complete!/'
      ]

  thin_keywords:
    keywords: [thin]
    parsing_regexp: [
        '/Status: 200/',
        '/Api-(Token|Version):/',
        '/Content-Type:/i',
        '/transfer-encoding:/',
        '/connection:/',
        '/x-newrelic-app-data:/',
        '/DEBUG -- (request:|response:)/',
        '/INFO -- : post http/',
        '/date:.*\/'
      ]
