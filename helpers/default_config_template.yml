# Email config
# ---------------------------------------------------
subject: 'Huckleberry | Logfile report'

subject_log_not_found: 'Huckleberry | Unknown logfile'

from: 'huckleberry@example.com'

recipients: 'set recipient emails here seperated by commas'

message_body: "Huckleberry log parser"


# Log types.
# ---------------------------------------------------
# Ex: type: {
#   keywords: [foo, bar],
#   parsing_regexp: [
#                   'foo',
#                   'foo',
#                   ]
# }
# ---------------------------------------------------
log_types: {
  production: {
              keywords: [production],
              parsing_regexp: [
                  '/Rendered.*(erb|html|builder|template)/',
                  '/Completed (200|302|204)/',
                  '/Redirected to/',
                  '/Parameters: \{.*\}$/',
                  '/Started (GET|POST|PUT|PATCH|DELETE)/',
                  '/(SELECT).*(AS|FROM)/',
                  '/(SET).*\=/',
                  '/truncate/',
                  '/BEGIN/',
                  '/COMMIT/',
                  '/INSERT INTO/',
                  '/(GET).*(200|302)/',
                  '/(updated_at).*(WHERE)/',
                  '/Processing by.*Controller/',
                  '/Filter chain halted as/',
                  '/Sent data.*(pdf|docx|english|jpg|jpeg|xlsx|xls|csv|png)/i',
                  '/(POST|PUT|GET|DELETE): http/',
                  '/\{(:headers).*}/',
                  '/Requested param.*\]/',
                  '/LDAP.*\[.*\]/',
                  '/LDAP.*connect/',
                  '/sequel_reconnector/',
                  '/AWS (S3|STS) (200|204)/',
                  '/\[AIRBRAKE\] Success/i'
                ]
              },

  new_relic_keywords: {
              keywords: [newrelic],
              parsing_regexp: [
                  '/Starting the New Relic agent/',
                  '/To prevent agent startup add a NEWRELIC_AGENT_ENABLED=false/',
                  '/Reading configuration from config\/",newrelic.yml/',
                  '/Environment: \w*$/',
                  '/Application: \w*$/',
                  '/No known dispatcher detected./',
                  '/(Installing|Finished).*instrumentation$/',
                  '/Reporting to: http/',
                  '/Starting Agent shutdown/',
                  '/Dispatcher: thin/',
                  '/Doing deferred dependency-detection before Rack startup/'
                ]
              },

  mailer_keywords: {
              keywords: [mailer],
              parsing_regexp: [
                  '/\d{4}\-\d{2}\-\d{2} \d{2}\:\d{2}\:\d{2}/',
                  '/Date: .*\+\d{4}/',
                  '/(From:|To:) .*@/',
                  '/Subject: .*/',
                  '/Mime-Version:/',
                  '/Content-Type:/',
                  '/charset\=/',
                  '/Message-ID: \<.*\>/',
                  '/Content-Transfer-Encoding:/',
                  '/View the application here/',
                  '/.*==_mimepart_.*/',
                  '/\(.*resend_email\)/'
                ]
              },

  process_runner_keywords: {
              keywords: [process, runner],
              parsing_regexp: [
                  '/Launched process/',
                  '/Completing task.*no params needed/',
                  '/\* complete!/'
                ]
              },

  thin_keywords: {
              keywords: [thin],
              parsing_regexp: [
                  '/Status: 200/',
                  '/Api-(Token|Version):/',
                  '/Content-Type:/i',
                  '/transfer-encoding:/',
                  '/connection:/',
                  '/x-newrelic-app-data:/',
                  '/DEBUG -- (request:|response:)/',
                  '/INFO -- : post http/',
                  '/date:.*\/'
                ]
              }
}
